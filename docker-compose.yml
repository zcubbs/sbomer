version: '3.8'

services:

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sbomer
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5

  sbomer:
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: sbomer:latest
    env_file: .env
    environment:
      SBOMER_DB_HOST: postgres
      SBOMER_DB_PORT: 5432
      SBOMER_AMQP_URI: amqp://guest:guest@rabbitmq:5672/
      SBOMER_DB_URL: postgresql://postgres:postgres@postgres:5432/sbomer?sslmode=disable
      SBOMER_FETCHER_SCHEDULE: 0 * * * * * # Every minute
      SBOMER_SYFT_BIN_PATH: /usr/bin/syft
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

volumes:
  postgres_data:
  rabbitmq_data:
